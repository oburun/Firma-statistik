/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Oguz
 */
public class test {

    /**
     * @param args the command line arguments
     */
    public static Customer[] Customers = new Customer[200];
    public static int[][] ratings = new int[200][5];
    public static double[] ortalama = new double[5];
    public static String[] ürünler = {"A","B","C","D","E"};
    public static int[] nationallist = new int[5];
    public static int[] internationallist = new int[5];
    public static int nationalcount=0;
    public static int internationalcount=0;
    public static int customercount=0;
    public static int[][] internationalOrt=new int[5][5];
    
    public static void main(String[] args) throws IOException {
        okuAta();
        ürünOrt();
        System.out.println(nationalcount);
        nationalOrt();
        internationalOrt();
        doctorOrt();
        System.out.println(ratings[35][2]);
        besalti();
        
    }

    /**
     *
     */
    public static void okuAta() throws IOException{
        File f = new File("Firma.txt");
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(f));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
        }
        String satir=br.readLine();
        satir=br.readLine();
        int i=1;
        int j=1;
        int k=0;
        int n=0;
        int c=1;
        String x;
        while(satir!=null){
            StringTokenizer st=new StringTokenizer(satir,",");
            while(st.hasMoreTokens()){
                x=st.nextToken();
                System.out.println(x);
                
                if(i%2!=0){
                    customercount++;
                    if("n".equals(x)){
                        Customers[c-1]= new NationalCustomer();
                        nationallist[nationalcount]=c-1;
                        nationalcount++;
                        n=1;
                        System.out.println("LLLLLLLLLLLLLLLLLLLLLL");
                    }
                    if("i".equals(x)){
                        Customers[c-1]= new InternationalCustomer();
                        internationallist[internationalcount]=c-1;
                        internationalcount++;
                        System.out.println("iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii");
                    }
                    if(Customers[c-1]==null){
                        System.out.println("anani sikim");
                    }
                    if(Customers[c-1]!=null){
                        System.out.println("BACIN sikim");
                    }
                    if(j==2){
                        Customers[c-1].setCustomerID(Integer.parseInt(x));
                    }
                    if(j==3){
                        Customers[c-1].setName(x);
                    }
                    if(j==4){
                        Customers[c-1].setSurname(x);
                    }
                    if(j==5){
                        if(n==1){
                            ((NationalCustomer)Customers[c-1]).setLicencePlateNumber(Integer.parseInt(x));
                        }else{
                            ((InternationalCustomer)Customers[c-1]).setCountry(x);
                        }
                    }
                    if(j==6){
                        if(n==1){
                            ((NationalCustomer)Customers[c-1]).setOccupation(x);
                        }else{
                            ((InternationalCustomer)Customers[c-1]).setCity(x);
                        }
                    }
                }
                else{
                    ratings[k][j-1]=Integer.parseInt(x);
                }
                System.out.println(i+" AA "+j);
                j++;
            }
            j=1;
            n=0;
            if(i%2==0){
                k++;
            }else{
                c++;
            }
            i++;
            satir=br.readLine();
        }
        }
        
    public static void ürünOrt(){
        int i=0;
        int j=0;
        int k=0;
        double toplam=0;
        while(k<5){
            while(ratings[i][0]!=0){
                toplam+=ratings[i][j];
                i++;
            }
            ortalama[k]=(double)(toplam/i);
            j++;
            i=0;
            k++;
            toplam=0;
        }
        System.out.println("---ORTALAMALAR---");
        for(i=0;i<5;i++){
            System.out.println(ürünler[i]+":"+ortalama[i]);
        }
    }
    public static void nationalOrt(){
        double total=0;
        int i=0;
        int j=0;
        int k=0;
        System.out.println("Ulusal müsterilerin ortalama derecelendirme");
        while(j<5){
            while(i<nationalcount){
                total+=ratings[nationallist[i]][j];
                i++;
            }
            System.out.println(ürünler[k]+" : "+(double)(total/nationalcount));
            total=0;
            j++;
            i=0;
            k++;
        }
    }public static void internationalOrt(){
        double total=0;
        int i=0;
        int j=0;
        int k=0;
        System.out.println("ULUSLARARASI MÜSTERILER DERECELENDIRME");
        while(j<5){
            while(i<internationalcount){
                total+=ratings[internationallist[i]][j];
                i++;
            }
            System.out.println(ürünler[k]+" : "+(double)(total/internationalcount));
            total=0;
            j++;
            i=0;
            k++;
        }
    }
    public static void doctorOrt(){
        int[] doctorOrtList = new int[5];
        int doctorCount=0;
        int i=0;
        int j=0;
        int k=0;
        int total=0;
        while(i<nationalcount){
            if(isDoctor(Customers[nationallist[i]])==true){
                while(j<5){
                    doctorOrtList[j]=ratings[nationallist[i]][j];
                    j++;
                }
                doctorCount++;
            }
            i++;
        }
        System.out.println("DOKTOR ORTALAMA DERECELENDIRME");
        while(k<5){
            System.out.println(ürünler[k]+" "+(double)doctorOrtList[k]/doctorCount);
            k++;
        }
    }
    public static boolean isDoctor(Customer x){
        return "Doktor".equals(((NationalCustomer)x).getOccupation());
    }
    public static void besalti(){
        int i=0;
        int j=0;
        int k=0;
        int l=0;
        while(j<5){
            System.out.println(ürünler[j]+" ÜRÜNÜ IÇIN ORTALAMANIN ALTINDA PUAN VEREN ULUSAL MÜSTERILER");
            while(ratings[i][j]!=0){
                if(ratings[i][j]<ortalama[j]){
                    while(k<nationallist.length){
                        if(k!=0){
                            if(nationallist[k]==0){
                                break;
                            }
                        }
                        if(i==nationallist[k]){
                            
                            System.out.println(Customers[i].toString());
                        }else{
                            internationalOrt[j][l]=i;
                            l++;
                        }
                        k++;
                    }
                }
                k=0;
                i++;
            }
            i=0;
            l=0;
            j++;
        }
        j=0;
        while(j<5){
            System.out.println(ürünler[j]+" ÜRÜNÜ IÇIN ORTALAMANIN ALTINDA PUAN VEREN ULUSLARARASI MÜSTERILER");
            System.out.println(internationalOrt[0][0]);
            while(internationalOrt[j][i]!=0){
                System.out.println(Customers[i].toString());
                i++;
            }
            i=0;
            j++;
        }
    }
        

}
